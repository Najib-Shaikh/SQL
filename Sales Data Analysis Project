-- Sales data analysis project
-- Author Najib Shaikh



-- Select all records from the sales dataset
SELECT * FROM sales_data_analysis.sales_dataset;

-- Count the total number of unique SKUs (Stock Keeping Units)
SELECT COUNT(DISTINCT SKU) AS Total_SKU 
FROM sales_dataset;

-- Rename the column with encoding issue (Order ID) to Order_ID
ALTER TABLE sales_dataset 
CHANGE `ï»¿Order ID` Order_ID TEXT;

-- Count the total number of orders
SELECT COUNT(Order_ID) AS Total_Order 
FROM sales_dataset;

-- Rename 'Customer ID' column to 'CID' for better readability
ALTER TABLE sales_dataset 
CHANGE `Customer ID` CID TEXT;

-- Count the total number of unique customers
SELECT COUNT(DISTINCT CID) AS Total_customer 
FROM sales_dataset;

-- Calculate total sales revenue
SELECT SUM(Total) AS Total_Sales 
FROM sales_dataset;

-- Count total number of high-priority orders
SELECT COUNT(`Order Priority`) AS Total_High_Priority_Order 
FROM sales_dataset 
WHERE `Order Priority`="High";

-- Count number of orders by shipping mode
SELECT `Ship Mode`, COUNT(Order_ID) AS Num_Order 
FROM sales_dataset
GROUP BY `Ship Mode`;

-- Count number of orders by order priority level
SELECT `Order Priority`, COUNT(Order_ID) AS Num_Order 
FROM sales_dataset
GROUP BY `Order Priority`;

-- Count number of orders by product container type
SELECT `Product Container`, COUNT(Order_ID) AS Num_Order 
FROM sales_dataset
GROUP BY `Product Container`;

-- Count number of orders delivered by each salesperson
SELECT SalesPerson, COUNT(Order_ID) AS Order_delivered 
FROM sales_dataset
GROUP BY SalesPerson;

-- Retrieve top 5 SKUs with the highest unit selling price
SELECT SKU AS Top_5_SKU_USP, `Unit Sell Price` AS Price
FROM sales_dataset
ORDER BY `Unit Sell Price` DESC
LIMIT 5;

-- Retrieve top 5 SKUs based on the number of orders placed
SELECT SKU AS Top_5_SKU_Order, COUNT(Order_ID) AS Num_Order
FROM sales_dataset
GROUP BY SKU
ORDER BY Num_Order DESC
LIMIT 5;

-- Calculate total revenue generated by each salesperson
SELECT SalesPerson, SUM(Total) AS Total_Revenue
FROM sales_dataset
GROUP BY SalesPerson
ORDER BY Total_Revenue DESC;

-- Retrieve top 5 customers who have spent the most
SELECT CID, SUM(Total) AS Total_Spent
FROM sales_dataset
GROUP BY CID
ORDER BY Total_Spent DESC
LIMIT 5;

-- Calculate average unit selling price for each SKU
SELECT SKU, AVG(`Unit Sell Price`) AS Avg_Sell_Price
FROM sales_dataset
GROUP BY SKU;

-- Analyze shipping time: average, max, and min for each shipping mode
SELECT `Ship Mode`, 
AVG(`shipping time`) AS Avg_shipping_time, 
MAX(`shipping time`) AS MAX_shipping_time, 
MIN(`shipping time`) AS MIN_shipping_time 
FROM sales_dataset
GROUP BY `Ship Mode`;

-- Convert 'Order Date' from string format to DATE type
UPDATE sales_dataset
SET `Order Date` = STR_TO_DATE(`Order Date`, '%d-%b-%y');
ALTER TABLE sales_dataset
MODIFY COLUMN `Order Date` DATE;

-- Convert 'Shipping Date' from string format to DATE type
UPDATE sales_dataset
SET `shipping date` = STR_TO_DATE(`shipping date`, '%d-%b-%y');
ALTER TABLE sales_dataset
MODIFY COLUMN `shipping date` DATE;

-- Calculate the average sales per order date
SELECT `Order Date`, AVG(Total) AS Avg_Sales
FROM sales_dataset 
GROUP BY `Order Date` 
ORDER BY `Order Date`;

-- Calculate total monthly sales revenue
SELECT DATE_FORMAT(`Order Date`, '%Y-%m') AS Month, SUM(Total) AS Monthly_Sales 
FROM sales_dataset 
GROUP BY Month 
ORDER BY Month;
